name: Deploy to AWS EC2 Apache Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to Apache Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            #!/bin/bash
            set -e

            # 変数の設定
            REPO_DIR="$HOME/QuickTutor"
            WEB_ROOT="/var/www/html/backend"
            ENV_FILE="$HOME/.env"

            # リポジトリを更新
            echo "Pulling latest code from GitHub repository..."
            cd $REPO_DIR
            git pull origin main

            # 更新されたファイルをコピー
            echo "Copying updated files to web root..."
            sudo rsync -av --delete $REPO_DIR/backend/ $WEB_ROOT/

            # 必要な依存関係をインストール
            echo "Installing PHP dependencies..."
            cd $WEB_ROOT
            sudo /usr/local/bin/composer install --no-dev

            # .envファイルをコピー
            echo "Copying .env file..."
            sudo cp $ENV_FILE $WEB_ROOT/.env

            # Laravelのキャッシュをクリア
            echo "Clearing Laravel cache..."
            sudo php $WEB_ROOT/artisan optimize:clear

            # データベースのマイグレーション
            echo "Running database migrations..."
            sudo php $WEB_ROOT/artisan migrate --force

            # コンフィグ、ルート、ビューのキャッシュを作成
            echo "Caching configuration..."
            sudo php $WEB_ROOT/artisan config:clear

            echo "Caching routes..."
            sudo php $WEB_ROOT/artisan route:cache

            # ビューキャッシュの作成（失敗を許容）
            echo "Caching views..."
            sudo php $WEB_ROOT/artisan view:cache || true

            # シンボリックリンクを作成
            echo "Creating storage symlink..."
            if [ -L "$WEB_ROOT/public/storage" ]; then
              echo "Removing existing storage symlink..."
              sudo rm $WEB_ROOT/public/storage
            fi
            sudo php $WEB_ROOT/artisan storage:link

            # ディレクトリの権限を設定
            echo "Setting directory permissions..."
            sudo chown -R apache:apache $WEB_ROOT
            sudo chmod -R 755 $WEB_ROOT
            sudo chmod -R 775 $WEB_ROOT/storage
            sudo chmod -R 775 $WEB_ROOT/bootstrap/cache

            # ログファイルの権限を設定
            echo "Setting log file permissions..."
            sudo chown -R apache:apache $WEB_ROOT/storage/logs
            sudo chmod -R 775 $WEB_ROOT/storage/logs

            # Apacheを再起動
            echo "Restarting Apache server..."
            sudo systemctl restart httpd

            echo "Deployment script completed successfully."
          EOF
